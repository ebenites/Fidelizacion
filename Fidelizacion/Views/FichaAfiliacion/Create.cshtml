@model Fidelizacion.Models.FichaAfiliacionViewModel


@section scripts {
    
    <script type="text/javascript">

        function limpiarDatosPersonales() {
                //alert("entro");
                //alert($('#numero_documento'));
                //alert($('#numero_documento').val());
            $('#numero_documento').val('')
            $('#nombre').val('')
            $('#numero_documento').val('')
            $('#apellidos').val('')
            $('#fecha_nacimiento').val('')
            $('#correo').val('')
            $('#numero_telefono').val('')
            $('#direccion').val('')
            $('#celular').val('')
            //$('#distrito option[value="Lima"]')
            $("#distrito").val("Lima").change();
            $("#provincia").val("Lima").change();
            $("#fk_tipo_documento").val("1").change();
            $("#sexo").val("M").change();
            $("#estado_civil").val("S").change();
           // $('#provincia').attr("value", "Lima");
            //$('#distrito').attr("value", "Lima");
        
        }

        function limpiarDatosGenerarCuenta() {
            
            $('#numero_cuenta').val('')
            $('#puntos').val('')
            $('#tipo_cuenta').val("1").change();
            $('#cuenta_titular').val('')
            $('#fk_cuenta_titular').val('')
            $('#cuenta_titular').attr("readonly", true);
            $('#generarbtn').prop('disabled', false);
            $('[name="numero_cuenta"]').val('')
           // $('#cuenta_titular').attr("readonly", true);
            $('#buscar_cuentatitular').attr("disabled", true);

            $('#labelCuentaTitular').removeClass("required-field");
            //
            // $('#provincia').attr("value", "Lima");
            //$('#distrito').attr("value", "Lima");

        }


        function limpiarDatosTarjeta() {

            
            $('#numero_cuenta').val('')
            $('#numero_tarjeta').val('')
            $('#fk_tarjeta_afiliacion').val('')
            $('[name="numero_cuenta"]').val('')

        }

        function procesarFormulario() {

            var tarjeta_afiliacion = $('#fk_tarjeta_afiliacion').val()

            var tip_cuenta = $('#tipo_cuenta').val()
            var operacion = true;
         
            if (tip_cuenta == '2') {
               
                var fk_cuenta = $('#fk_cuenta_titular').val()
                
                if (fk_cuenta == null || fk_cuenta == '' || fk_cuenta == '0') {
                   
                    $('#validacionfk_cuenta_titular').text("No se selecciono una cuenta titular.");
                    operacion = false;
                }
            
            }
            
            if (tarjeta_afiliacion == null || tarjeta_afiliacion == '' || tarjeta_afiliacion == '0') {
                $('#validacionfk_tarjeta_afiliacion').text("No se selecciono un Tarjeta.");
                operacion = false;
            }
            //bootbox.alert(tarjeta_afiliacion);
            if (operacion) {
                $('#formularioCrear').submit();
            }
            
            
        }

        function buscarCuentaTitular() {

           
            var cuentaTitular2 = $('#cuenta_titular').val();

           
            //bootbox.alert(cuentaTitular2)
            var objeto = {
                cuenta_titular: cuentaTitular2
            }
            $.ajax({
                url: '@Url.Content("~/FichaAfiliacion/GetCuentaTitular")',
                type: "GET",
                contentType: "application/json",
                data: { cuenta_titular: cuentaTitular2},
                dataType: "json",
                success: function (response) {
                    try {

                       

                        if (response.operacion) {
                            
                            $('#fk_cuenta_titular').attr('value', response.objeto.id_cuenta);

                            
                        } else
                        {
                            bootbox.alert(response.mensaje)
                            $('#fk_cuenta_titular').attr('value', "");

                        }
                        
                    } catch (e) {
                        bootbox.alert(e.message)
                    }

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    bootbox.alert("Se encontro un error al ejecutar la operacion, vuelva a intentarlo más tarde");

                }


            });

        }


        function buscarNumeroTarjeta() {


            var cuentaTitular2 = $('#numero_tarjeta').val();

            //bootbox.alert(cuentaTitular2)
            var objeto = {
                cuenta_titular: cuentaTitular2
            }
            $.ajax({
                url: '@Url.Content("~/FichaAfiliacion/GetTarjetaAfiliacion")',
                type: "GET",
                contentType: "application/json",
                data: { numero_tarjeta: cuentaTitular2 },
                dataType: "json",
                success: function (response) {
                    try {


                        if (response != null) {
                            if (response.operacion) {
                                //bootbox.alert(response.objeto.numero_tarjeta)
                                $('#irAdministrar').css('display', 'none');
                                $('#fk_tarjeta_afiliacion').attr('value', response.objeto.id_tarjeta_afiliacion);
                                //bootbox.alert($('#fk_tarjeta_afiliacion').val());
                                bootbox.alert('Número de tarjeta encontrada.');
                            } else {
                                bootbox.alert(response.mensaje)
                                $('#fk_tarjeta_afiliacion').attr('value', "");
                            }

                            if (response.mostrarLink) {
                                
                                $('#irAdministrar').css('display', 'block');
                            }
                            
                        }




                    } catch (e) {
                        bootbox.alert(e.message)
                    }

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    bootbox.alert("Se encontro un error al ejecutar la operacion, vuelva a intentarlo más tarde");

                }


            });

        }

        function habilitarCuentaTitular(obj) {
            var tipoCuenta = obj.value;


            if (tipoCuenta == "2") {

                $('#cuenta_titular').attr("readonly", false);
                $('#buscar_cuentatitular').attr("disabled", false);

                $('#labelCuentaTitular').addClass("required-field");

            } else {
                $('#cuenta_titular').attr("readonly", true);
                $('#buscar_cuentatitular').attr("disabled", true);

                $('#labelCuentaTitular').removeClass("required-field");

            }


        }
    $(function () {
        $('#estado_afiliado').val('Activo');
        $('#tipo_cuenta').val('1');
        $('#fecha_alta').val(moment().format('YYYY-MM-DD'));
        $("#fk_tipo_documento").val("1").change();
        $('#estado').val('A');

        $('#fecha_asignacion').datetimepicker({
            format: "YYYY-MM-DD",
            defaultDate: moment(),
            locale: "es"
        });

        $('input[name="fecha_nacimiento"]').datetimepicker({
            format: "YYYY-MM-DD",
            locale: "es"
        });
        limpiarDatosGenerarCuenta();
        $('#motivo').val('Alta de Afiliado');

    });

    function generar(obj) {
        var ncuenta = Math.round(Math.random() * 10000000000000000);
        $('[name="numero_cuenta"]').val(ncuenta);
        $('[name="puntos"]').val(100);

        obj.disabled = true;
    }

    </script>
}

@{
    ViewBag.Title = "Nuevo Afiliado";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>

    .required-field:after {
    color: #d00;
    content: "(*)";
    position: absolute;
    margin-left: 3px;
    top: 10px;
}
</style>

<h2>Nuevo Afiliado</h2>
<br />

@using (Html.BeginForm("Create", "FichaAfiliacion", FormMethod.Post, new { id = "formularioCrear" })) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Datos Personales</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.ValidationMessage("ERROR_MESSAGE", "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.fk_tipo_documento, htmlAttributes: new { @class = "control-label required-field col-md-2" })
           
            <div class="col-md-4">
                @*@Html.DropDownList("fk_tipo_documento", null, htmlAttributes: new { @class = "form-control" })*@
              
                @Html.DropDownListFor(model => model.fk_tipo_documento, new SelectList(
                  new List<Object>{

                       new { value = "1" , text = "DNI" },
                       new { value = "2" , text = "Carnet Extrangería"}
                    },
                  "value",
                  "text",
                   2), new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.fk_tipo_documento, "", new { @class = "text-danger" })


            </div>
            <div class="col-md-1">
                <input type="button"  value="Limpiar" class="btn btn-default" onclick="javascirpt:limpiarDatosPersonales()"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numero_documento, htmlAttributes: new { @class = "control-label required-field col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.numero_documento, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.numero_documento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label required-field col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @*Html.LabelFor(model => model.apellidos, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label required-field col-md-2" for="apellidos" >Apellidos</label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.apellidos, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.apellidos, "", new { @class = "text-danger" })
            </div>
        </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.fecha_nacimiento, htmlAttributes: new { @class = "control-label required-field col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.fecha_nacimiento, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fecha_nacimiento, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.sexo, htmlAttributes: new { @class = "control-label required-field col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.sexo, new SelectList(
                  new List<Object>{

                       new { value = "M" , text = "Masculino" },
                       new { value = "F" , text = "Femenino"}
                    },
                  "value",
                  "text",
                   2), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.sexo, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
        @Html.LabelFor(model => model.estado_civil, htmlAttributes: new { @class = "control-label required-field col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.estado_civil, new SelectList(
                  new List<Object>{

                       new { value = "S" , text = "Soltero" },
                       new { value = "C" , text = "Casado"},
                       new { value = "V" , text = "Viudo"},
                       new { value = "D" , text = "Divorciado"}
                    },
                  "value",
                  "text",
                   2), new { @class = "form-control" })
            
            @Html.ValidationMessageFor(model => model.estado_civil, "", new { @class = "text-danger" })
        </div>
    </div>


        <div class="form-group">
            @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label required-field col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @type = "email", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numero_telefono, htmlAttributes: new { @class = "control-label required-field col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.numero_telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numero_telefono, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.celular, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.celular, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.celular, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.direccion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.provincia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.provincia, new SelectList(
                  new List<Object>{

                       new { value = "Lima" , text = "Lima" }
                    },
                  "value",
                  "text",
                   2), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.provincia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.distrito, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.distrito, new SelectList(
                  new List<Object>{

                       new { value = "Lima" , text = "Lima" },
                       new { value = "San Borja" , text = "San Borja" },
                       new { value = "Surco" , text = "Surco" }
                    },
                  "value",
                  "text",
                   2), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.distrito, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estado_afiliado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.estado_afiliado, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.estado_afiliado, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.fecha_alta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.fecha_alta, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.fecha_alta, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <h4>Generar Cuenta</h4>
        <hr />
        
        <div class="form-group">
            @Html.LabelFor(model => model.numero_cuenta, htmlAttributes: new { @class = "control-label required-field col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.numero_cuenta, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly"} })
                @Html.ValidationMessageFor(model => model.numero_cuenta, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-1">
                <input type="button" id="generarbtn" value="Generar" class="btn btn-default" onclick="generar(this)"/>
            </div>
            <div class="col-md-1">
                <input type="button" value="Limpiar" class="btn btn-default" onclick="javascript:limpiarDatosGenerarCuenta()"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.puntos, htmlAttributes: new { @class = "control-label required-field col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.puntos, new { htmlAttributes = new { @class = "form-control" , @readonly="readonly" } })
                @Html.ValidationMessageFor(model => model.puntos, "", new { @class = "text-danger" })
            </div>
        </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.tipo_cuenta, htmlAttributes: new { @class = "control-label required-field col-md-2" })
            <div class="col-md-4">
                @*@Html.EditorFor(model => model.tipo_cuenta, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.tipo_cuenta, new SelectList(
                  new List<Object>{

                       new { value = "1" , text = "Titular" },
                       new { value = "2" , text = "Adicional" }
                    },
                  "value",
                  "text",
                   2), new { @class = "form-control" , @onchange="habilitarCuentaTitular(this)" })


                @Html.ValidationMessageFor(model => model.tipo_cuenta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cuenta_titular, htmlAttributes: new { @class = "control-label col-md-2" , @id="labelCuentaTitular" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.cuenta_titular, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @*@Html.ValidationMessageFor(model => model.cuenta_titular, "", new { @class = "text-danger" })*@
                @Html.ValidationMessageFor(model => model.fk_cuenta_titular, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.fk_cuenta_titular, null)
                @*<span class="field-validation-valid text-danger" data-valmsg-for="fk_cuenta_titular"  id="validacionfk_cuenta_titular"></span>*@
            </div>

            <div class="col-md-1">
                <input type="button" name="buscar_cuentatitular" id="buscar_cuentatitular" value="Buscar" class="btn btn-default" disabled onclick="buscarCuentaTitular()"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })*@
                <input type="text" class="form-control" value="Activo" readonly />
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <h4>Asignar Tarjeta</h4>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.numero_cuenta, htmlAttributes: new { @class = "control-label required-field col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.numero_cuenta, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.numero_cuenta, "", new { @class = "text-danger" })
            </div>

            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numero_tarjeta, htmlAttributes: new { @class = "control-label required-field col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.numero_tarjeta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numero_tarjeta, "", new { @class = "text-danger" })
                <a href="@Url.Content("~/TarjetaAfiliacion/Create")" style="display:none" id="irAdministrar" target="_blank">Ingresar Administrar Tarjeta</a>
                @*<input type="text" name="fk_tarjeta_afiliacion" id="fk_tarjeta_afiliacion" />*@
                @*@Html.LabelFor(model => model.fk_tarjeta_afiliacion, htmlAttributes: new { @class = "control-label required-field col-md-2" })
               @Html.EditorFor(model => model.fk_tarjeta_afiliacion, new { htmlAttributes = new { @class = "form-control" } })*@
                 @Html.HiddenFor(model => model.fk_tarjeta_afiliacion, "")
                <span class="field-validation-valid text-danger" data-valmsg-for="fk_tarjeta_afiliacion" data-valmsg-replace="true" id="validacionfk_tarjeta_afiliacion"></span>
            </div>

            <div class="col-md-1">
                <input type="button" value="Buscar" class="btn btn-default" onclick="buscarNumeroTarjeta()" />
            </div>
            <div class="col-md-1">
                <input type="button" value="Limpiar" class="btn btn-default"  onclick="javascript: limpiarDatosTarjeta()"/>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.fecha_asignacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.fecha_asignacion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.fecha_asignacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estado_tarjeta, htmlAttributes: new { @class = "control-label col-md-2"  })
            <div class="col-md-4">
                @*Html.EditorFor(model => model.estado_tarjeta, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="text" class="form-control" value="Activo" readonly />
                @Html.ValidationMessageFor(model => model.estado_tarjeta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.motivo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.motivo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.motivo, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Grabar" class="btn btn-primary" onclick="procesarFormulario();"/>&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;
                <input type="button" value="Salir" class="btn btn-danger" onclick="location.href='@Url.Content("~/FichaAfiliacion/")'"/>
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
