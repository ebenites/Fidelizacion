@model Fidelizacion.Models.FichaAfiliacionViewModel

@section scripts {
    <script type="text/javascript">
    $(function () {
        $('#estado_afiliado').val('Activo');
        $('#fecha_alta').val(moment().format('YYYY-MM-DD'));

        $('#estado').val('A');

        $('#fecha_asignacion').datetimepicker({
            format: "YYYY-MM-DD",
            defaultDate: moment(),
            locale: "es"
        });

        $('input[name="fecha_nacimiento"]').datetimepicker({
            format: "YYYY-MM-DD",
            locale: "es"
        });

        $('#motivo').val('Alta');
       
    });

    function generar() {
        var ncuenta = Math.round(Math.random() * 10000000000000000);
        $('[name="numero_cuenta"]').val(ncuenta);
    }

    </script>
}

@{
    ViewBag.Title = "Nuevo Afiliado";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Nuevo Afiliado</h2>
<br />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Datos Personales</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.fk_tipo_documento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.DropDownList("fk_tipo_documento", null, htmlAttributes: new { @class = "form-control" })*@
              
                @Html.DropDownListFor(model => model.fk_tipo_documento, new SelectList(
                  new List<Object>{

                       new { value = "1" , text = "DNI" },
                       new { value = "2" , text = "Carnet Extrangería"}
                    },
                  "value",
                  "text",
                   2), new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.fk_tipo_documento, "", new { @class = "text-danger" })


            </div>
            <div class="col-md-1">
                <input type="button"  value="Limpiar" class="btn btn-default" onclick="this.form.reset()"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numero_documento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.numero_documento, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.numero_documento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @*Html.LabelFor(model => model.apellido_paterno, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="apellido_paterno">Apellidos</label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.apellido_paterno, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.apellido_paterno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.apellido_materno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.apellido_materno, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.apellido_materno, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.fecha_nacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.fecha_nacimiento, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fecha_nacimiento, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.sexo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.sexo, new SelectList(
                  new List<Object>{

                       new { value = "M" , text = "Masculino" },
                       new { value = "F" , text = "Femenino"}
                    },
                  "value",
                  "text",
                   2), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.sexo, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
        @Html.LabelFor(model => model.estado_civil, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.estado_civil, new SelectList(
                  new List<Object>{

                       new { value = "S" , text = "Soltero" },
                       new { value = "C" , text = "Casado"},
                       new { value = "V" , text = "Viudo"},
                       new { value = "D" , text = "Divorciado"}
                    },
                  "value",
                  "text",
                   2), new { @class = "form-control" })
            
            @Html.ValidationMessageFor(model => model.estado_civil, "", new { @class = "text-danger" })
        </div>
    </div>


        <div class="form-group">
            @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @type = "email", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numero_telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.numero_telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numero_telefono, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.celular, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.celular, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.celular, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.direccion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.provincia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.provincia, new SelectList(
                  new List<Object>{

                       new { value = "Lima" , text = "Lima" }
                    },
                  "value",
                  "text",
                   2), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.provincia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.distrito, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.distrito, new SelectList(
                  new List<Object>{

                       new { value = "Lima" , text = "Lima" },
                       new { value = "San Borja" , text = "San Borja" },
                       new { value = "Surco" , text = "Surco" }
                    },
                  "value",
                  "text",
                   2), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.distrito, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estado_afiliado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.estado_afiliado, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.estado_afiliado, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.fecha_alta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.fecha_alta, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.fecha_alta, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <h4>Generar Cuenta</h4>
        <hr />
        
        <div class="form-group">
            @Html.LabelFor(model => model.numero_cuenta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.numero_cuenta, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @required = "required" } })
                @Html.ValidationMessageFor(model => model.numero_cuenta, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-1">
                <input type="button" value="Generar" class="btn btn-default" onclick="generar()"/>
            </div>
            <div class="col-md-1">
                <input type="button" value="Limpiar" class="btn btn-default" onclick="this.form.reset()"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.puntos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.puntos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.puntos, "", new { @class = "text-danger" })
            </div>
        </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.tipo_cuenta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.EditorFor(model => model.tipo_cuenta, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.tipo_cuenta, new SelectList(
                  new List<Object>{

                       new { value = "1" , text = "Titular" },
                       new { value = "1" , text = "Adicional" }
                    },
                  "value",
                  "text",
                   2), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.tipo_cuenta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cuenta_titular, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.cuenta_titular, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.cuenta_titular, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-1">
                <input type="button" value="Buscar" class="btn btn-default" disabled/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })*@
                <input type="text" class="form-control" value="Activo" readonly />
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <h4>Asignar Tarjeta</h4>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.numero_cuenta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.numero_cuenta, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.numero_cuenta, "", new { @class = "text-danger" })
            </div>

            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numero_tarjeta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.numero_tarjeta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numero_tarjeta, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-1">
                <input type="button" value="Buscar" class="btn btn-default" />
            </div>
            <div class="col-md-1">
                <input type="button" value="Limpiar" class="btn btn-default"  onclick="this.form.reset()"/>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.fecha_asignacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.fecha_asignacion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.fecha_asignacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estado_tarjeta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*Html.EditorFor(model => model.estado_tarjeta, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="text" class="form-control" value="Activo" readonly />
                @Html.ValidationMessageFor(model => model.estado_tarjeta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.motivo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.motivo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.motivo, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Grabar" class="btn btn-primary" />&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;
                <input type="button" value="Salir" class="btn btn-danger" onclick="location.href='@Url.Content("~/FichaAfiliacion/")'"/>
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
