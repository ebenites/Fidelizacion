@using Fidelizacion.Models;
@section scripts {
    <script type="text/javascript">
        $(function () {

            $('input[name="tipo"]').click(function () {
                if ($(this).val() == 'R') {
                    $('[name="tienda"]').parent().parent().hide();
                    $('[name="trimestre"]').parent().parent().hide();
                } else {
                    $('[name="tienda"]').parent().parent().show();
                    $('[name="trimestre"]').parent().parent().show();
                }
            });

        });

        function generar() {
            var idtienda = $('[name="tienda"]').val();
            var anio = $('[name="anio"]').val();
            var trimestre = $('[name="trimestre"]').val();
            var idcategoria = $('[name="idcategoria"]').val();

            var params = { 'idtienda': idtienda, 'anio': anio, 'trimestre': trimestre, 'idcategoria': idcategoria };

            var tipo = $('[name="tipo"]:checked').val();

            var url = '';
            if (tipo == 'P') {
                url = '@Url.Content("~/ReporteCanje/ReporteProductos")';
            } else if (tipo == 'C') {
                url = '@Url.Content("~/ReporteCanje/ReporteCategorias")';
            } else if (tipo == 'R') {

                if (anio == 0) {
                    bootbox.alert("Debe de seleccionar el año para generar el reporte.");
                    return;
                }

                url = '@Url.Content("~/ReporteCanje/ReporteRotacion")';
            }

            $.post(url, params, function (data) {
                $('#reporte-table').html(data);
                $('#reporte-table table.highchart')

                    .highchartTable();

                // Show detail filters
                var tienda = $('[name="tienda"] option:selected').text().replace(/--/g, '');
                $('#txt-tienda').text(tienda);

                var anio = $('[name="anio"] option:selected').text().replace(/--/g, '');
                $('#txt-anio').text(anio);

                var trimestre = $('[name="trimestre"] option:selected').text().replace(/--/g, '');
                $('#txt-trimestre').text(trimestre);

                var idcategoria = $('[name="idcategoria"] option:selected').text().replace(/--/g, '');
                $('#txt-idcategoria').text(idcategoria);

                //

            });

        }

        function saveGraph() {
            //var chart = Highcharts.charts[Highcharts.charts.length - 1];
            var chart = Highcharts.lastChart;

            if ($('#table-rotacion').length) {

                chart.exportChart({
                    type: 'application/pdf',
                    filename: 'Reporte'
                },
                {
                    legend: {
                        y: -300
                    },
                    chart: {
                        height: 700,
                        events: {
                            load: function () {
                                this.renderer.image('http://www.uneteaspsa.pe/images/plaza_vea.jpg', 10, 10, 80, 27).add();
                                this.renderer.text('<b>Fecha: </b>@DateTime.Now.ToString("dd/MM/yyyy")', 480, 20).add();
                                this.renderer.path(['M', 0, 400, 'L', 600, 400]).attr({ 'stroke': 'silver', 'stroke-width': 1 }).add();

                                var anio = $('[name="anio"] option:selected').text().replace(/--/g, '');
                                var idcategoria = $('[name="idcategoria"] option:selected').text().replace(/--/g, '');

                                this.renderer.text('<b>Año: </b>' + anio, 20, 420).add();
                                this.renderer.text('<b>Categoría: </b>' + idcategoria, 20, 440).add();

                                // user options
                                var tableTop = 460,
                                    colWidth = 180,
                                    tableLeft = 20,
                                    rowHeight = 20,
                                    cellPadding = 2.5,
                                    valueDecimals = 0,
                                    valueSuffix = '';

                                // internal variables
                                var chart = this,
                                    series = chart.series,
                                    renderer = chart.renderer,
                                    cellLeft = tableLeft;

                                // draw category labels
                                $.each(chart.xAxis[0].categories, function (i, name) {
                                    renderer.text(
                                        name,
                                        cellLeft + cellPadding,
                                        tableTop + (i + 2) * rowHeight - cellPadding
                                    )
                                    .css({
                                        fontWeight: 'bold'
                                    })
                                    .add();
                                });

                                $.each(series, function (i, serie) {
                                    cellLeft += colWidth;

                                    // Apply the cell text
                                    renderer.text(
                                            serie.name,
                                            cellLeft - cellPadding + colWidth,
                                            tableTop + rowHeight - cellPadding
                                        )
                                        .attr({
                                            align: 'right'
                                        })
                                        .css({
                                            fontWeight: 'bold'
                                        })
                                        .add();

                                    $.each(serie.data, function (row, point) {

                                        // Apply the cell text
                                        renderer.text(
                                                Highcharts.numberFormat(point.y, valueDecimals) + valueSuffix,
                                                cellLeft + colWidth - cellPadding,
                                                tableTop + (row + 2) * rowHeight - cellPadding
                                            )
                                            .attr({
                                                align: 'right'
                                            })
                                            .add();

                                        // horizontal lines
                                        if (row == 0) {
                                            Highcharts.tableLine( // top
                                                renderer,
                                                tableLeft,
                                                tableTop + cellPadding,
                                                cellLeft + colWidth,
                                                tableTop + cellPadding
                                            );
                                            Highcharts.tableLine( // bottom
                                                renderer,
                                                tableLeft,
                                                tableTop + (serie.data.length + 1) * rowHeight + cellPadding,
                                                cellLeft + colWidth,
                                                tableTop + (serie.data.length + 1) * rowHeight + cellPadding
                                            );
                                        }
                                        // horizontal line
                                        Highcharts.tableLine(
                                            renderer,
                                            tableLeft,
                                            tableTop + row * rowHeight + rowHeight + cellPadding,
                                            cellLeft + colWidth,
                                            tableTop + row * rowHeight + rowHeight + cellPadding
                                        );

                                    });

                                    // vertical lines        
                                    if (i == 0) { // left table border  
                                        Highcharts.tableLine(
                                            renderer,
                                            tableLeft,
                                            tableTop + cellPadding,
                                            tableLeft,
                                            tableTop + (serie.data.length + 1) * rowHeight + cellPadding
                                        );
                                    }

                                    Highcharts.tableLine(
                                        renderer,
                                        cellLeft,
                                        tableTop + cellPadding,
                                        cellLeft,
                                        tableTop + (serie.data.length + 1) * rowHeight + cellPadding
                                    );

                                    if (i == series.length - 1) { // right table border    

                                        Highcharts.tableLine(
                                            renderer,
                                            cellLeft + colWidth,
                                            tableTop + cellPadding,
                                            cellLeft + colWidth,
                                            tableTop + (serie.data.length + 1) * rowHeight + cellPadding
                                        );
                                    }

                                });


                            }
                        }
                    }
                });

            } else {

                chart.exportChart({
                    type: 'application/pdf',
                    filename: 'Reporte'
                },
                {
                    legend: {
                        y: -100
                    },
                    chart: {
                        height: 500,
                        events: {
                            load: function () {
                                this.renderer.image('http://www.uneteaspsa.pe/images/plaza_vea.jpg', 10, 10, 80, 27).add();
                                this.renderer.text('<b>Fecha: </b>@DateTime.Now.ToString("dd/MM/yyyy")', 480, 20).add();
                                this.renderer.path(['M', 0, 400, 'L', 600, 400]).attr({ 'stroke': 'silver', 'stroke-width': 1 }).add();

                                var tienda = $('[name="tienda"] option:selected').text().replace(/--/g, '');
                                var anio = $('[name="anio"] option:selected').text().replace(/--/g, '');
                                var trimestre = $('[name="trimestre"] option:selected').text().replace(/--/g, '');
                                var idcategoria = $('[name="idcategoria"] option:selected').text().replace(/--/g, '');

                                this.renderer.text('<b>Tienda: </b>' + tienda, 20, 420).add();
                                this.renderer.text('<b>Año: </b>' + anio, 20, 440).add();
                                this.renderer.text('<b>Trimestre: </b>' + trimestre, 20, 460).add();
                                this.renderer.text('<b>Categoría: </b>' + idcategoria, 20, 480).add();

                            }
                        }
                    }
                }
            );

            }

        }

        Highcharts.tableLine = function (renderer, x1, y1, x2, y2) {
            renderer.path(['M', x1, y1, 'L', x2, y2])
                .attr({
                    'stroke': 'silver',
                    'stroke-width': 1
                })
                .add();
        }

        function printGraph() {
            //var chart = Highcharts.charts[Highcharts.charts.length-1];
            var chart = Highcharts.lastChart;
            //chart.print();
            printCharts([chart])
        }

        function printCharts(charts) {

            var origDisplay = [],
                origParent = [],
                body = document.body,
                childNodes = body.childNodes;

            // hide all body content
            Highcharts.each(childNodes, function (node, i) {
                if (node.nodeType === 1) {
                    origDisplay[i] = node.style.display;
                    node.style.display = "none";
                }
            });

            // put the chart detail
            origParent[0] = $('#table-title').get(0).parentNode;
            body.appendChild($('#table-title').get(0));
            origParent[1] = $('#table-detail').get(0).parentNode;
            body.appendChild($('#table-detail').get(0));

            // put the charts back in
            $.each(charts, function (i, chart) {
                origParent[i + 2] = chart.container.parentNode;
                body.appendChild(chart.container);
            });

            // Rotation table
            if ($('#table-rotacion').length) {
                origParent.push($('#table-rotacion').get(0).parentNode);
                body.appendChild($('#table-rotacion').get(0));
            }

            // put the chart detail (foot)
            origParent.push($('#table-foot').get(0).parentNode);
            body.appendChild($('#table-foot').get(0));
            $('#table-foot div.info').show();

            // print
            window.print();

            // allow the browser to prepare before reverting
            setTimeout(function () {

                // put the charts back in
                origParent[0].appendChild($('#table-title').get(0));
                origParent[1].appendChild($('#table-detail').get(0));

                // put the chart back in
                $.each(charts, function (i, chart) {
                    origParent[i + 2].appendChild(chart.container);
                });

                // Rotation table
                if ($('#table-rotacion').length) {
                    origParent[origParent.length - 2].appendChild($('#table-rotacion').get(0));
                }

                // put the charts back in
                origParent[origParent.length - 1].appendChild($('#table-foot').get(0));
                $('#table-foot div.info').hide();

                // restore all body content
                Highcharts.each(childNodes, function (node, i) {
                    if (node.nodeType === 1) {
                        node.style.display = origDisplay[i];
                    }
                });
            }, 500);
        }

    </script>
}

<ol class="breadcrumb">
    <li><a href="#">Inicio</a></li>
    <li><a href="#">Reportes</a></li>
    <li class="active">Reporte de Canjes</li>
</ol>

<div class="page-header">
    <h2>Reporte de Canjes</h2>
    @{ViewBag.Title = "Reporte de Canjes";}
</div>

<form onsubmit="return false;">

    <fieldset>
        <legend>Filtro</legend>

        <div class="row">
            <div class="col-sm-6">

                <div class="row form-group">
                    <label for="tienda" class="col-sm-2 form-control-label text-right">Tienda</label>
                    <div class="col-sm-10 form-inline">
                        <select id="tienda" name="tienda" class="form-control">
                            <option value="0">-- Todos --</option>
                            @foreach (t_tienda tienda in ViewBag.tiendas)
                            {
                                <option value="@tienda.id_tienda")>@tienda.nombre_tienda</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="row form-group">
                    <label for="anio" class="col-sm-2 form-control-label text-right">Año</label>
                    <div class="col-sm-10 form-inline">
                        <select id="anio" name="anio" class="form-control">
                            <option value="0">-- Todos --</option>
                            @foreach (int anio in ViewBag.anios)
                            {
                                <option value="@anio" )>@anio</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="row form-group">
                    <label for="trimestre" class="col-sm-2 form-control-label text-right">Trimestre</label>
                    <div class="col-sm-10 form-inline">
                        <select id="trimestre" name="trimestre" class="form-control">
                            <option value="0">-- Todos --</option>
                            @for (int i=1; i<=4; i++)
                            {
                                <option value="@i" )>@i</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="row form-group">
                    <label for="idcategoria" class="col-sm-2 form-control-label text-right">Categoría</label>
                    <div class="col-sm-10 form-inline">
                        <select id="idcategoria" name="idcategoria" class="form-control">
                            <option value="0">-- Todos --</option>
                            @foreach (t_categoria_producto_canje categoria in ViewBag.categorias)
                            {
                                <option value="@categoria.id_categoria_producto_canje" )>@categoria.nombre_categoria_producto</option>
                            }
                        </select>
                    </div>
                </div>

            </div>
            <div class="col-sm-6">

                <div class="form-group">
                    <div class="radio">
                        <label>
                            <input type="radio" name="tipo" id="tipo" value="P" checked>
                            Ranking de productos
                        </label>
                    </div>
                    <div class="radio">
                        <label>
                            <input type="radio" name="tipo" id="tipo" value="C">
                            Ranking de categorias
                        </label>
                    </div>
                    <div class="radio">
                        <label>
                            <input type="radio" name="tipo" id="tipo" value="R">
                            Rotación de productos
                        </label>
                    </div>
                </div>
                
                <br />

                <br />

                <div class="row form-group">
                    <div class="col-sm-12 form-inline">
                        <input type="button" value="Generar" class="btn btn-primary" style="width:100px" onclick="generar()" />
                        <a href="@Url.Content("~/Home/Cerrar")" class="btn btn-danger" style="width:100px">Salir</a>
                    </div>
                </div>

            </div>
        </div>
    </fieldset>

    <hr/>

    <div id="reporte-table" class="table-responsive">

    </div>

</form>
